{"version":3,"sources":["reportWebVitals.js","components/SearchBar.js","components/Navbar.js","components/PatientForm.js","components/EditForm.js","components/PatientList.js","components/Home.js","components/Login.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBar","searchQuery","setSearchQuery","handleSearch","React","createElement","Fragment","className","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","Navbar","fetchAllPatients","show","setShow","useState","toggleMenu","concat","Link","to","GiHamburgerMenu","RxCross1","PatientForm","formData","setFormData","first_name","last_name","birth_number","drug_name","dosage","lot_number","expiration_date","count","patients","setPatients","console","log","navigate","useNavigate","useEffect","axios","get","response","data","catch","error","handleChange","name","onSubmit","async","preventDefault","post","EditForm","patientId","onClose","patientData","put","handleCancel","PatientList","searchResultMessage","handleDelete","editingPatientId","setEditingPatientId","map","patient","_id","checked","date","split","slice","HashLink","smooth","handleEdit","AiOutlineEdit","FaRegRectangleXmark","updatedPatients","handleCheckToggle","AiFillCheckSquare","AiOutlineCheckSquare","id","handleCloseEditForm","Home","allPatients","setAllPatients","setSearchResultMessage","queryLowerCase","toLowerCase","filteredPatients","filter","Object","values","some","field","includes","length","delete","Date","getFullYear","Login","setValues","password","message","setMessage","result","required","router","createBrowserRouter","path","element","createRoot","document","getElementById","render","RouterProvider"],"mappings":"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","file":"static/js/main.782cf46d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// SearchBar.js\n\nimport React from 'react';\nimport \"./SearchBar.css\"\n\nfunction SearchBar({ searchQuery, setSearchQuery, handleSearch }) {\n\n    const handleSearchKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n\n    return (\n        <>\n            <div className=\"search-box\">\n                <div className=\"search\">\n                    <div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Vyhľadávaj...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                            onKeyDown={handleSearchKeyPress}\n                        />\n                    </div>\n                </div>\n                <button className='search-btn' onClick={handleSearch}>Hľadaj</button>\n            </div>\n\n        </>\n    );\n}\n\nexport default SearchBar;\n","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport \"./Navbar.css\"\nimport SearchBar from './SearchBar'\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { RxCross1 } from \"react-icons/rx\";\n\nexport default function Navbar({ searchQuery, setSearchQuery, handleSearch, fetchAllPatients }) {\n\n    const [show, setShow] = useState(false);\n\n    function toggleMenu() {\n        setShow(!show)\n\n    }\n\n    return (\n        <>\n            <nav>\n                <div className=\"nav-box\">\n                    <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} handleSearch={handleSearch} />\n                    <div className={`nav-items ${show ? 'show' : 'hide'}`} >\n                        <ul>\n                            <li><Link to=\"/home\" onClick={() => { toggleMenu(); fetchAllPatients(); }}>Domov</Link></li>\n                            <li><Link to=\"/add-patient\" onClick={toggleMenu} >Pridaj pacienta</Link> </li>\n                            <li><Link to=\"/\" >Odhlás sa</Link> </li>\n                        </ul>\n                    </div>\n                    <div className=\"hamburger-icon\" onClick={toggleMenu} ><GiHamburgerMenu></GiHamburgerMenu></div>\n                    {show && <div className=\"cross-icon\" onClick={toggleMenu}><RxCross1 /></div>}\n                </div>\n            </nav>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport \"./PatientForm.css\"\n\n\nfunction PatientForm() {\n\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        birth_number: '',\n        drug_name: '',\n        dosage: '',\n        lot_number: '',\n        expiration_date: '',\n        count: '',\n    });\n\n    const [patients, setPatients] = useState([]);\n    console.log(patients)\n\n    const navigate = useNavigate();\n\n\n\n    useEffect(() => {\n        // Fetch patient data from the server when the component mounts\n        axios.get('/patients')\n            .then((response) => {\n                setPatients(response.data);\n                console.log(response.data)\n            })\n            .catch((error) => {\n                console.error('Error fetching patients:', error);\n            });\n    }, []);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            await axios.post('/patients', formData);\n\n            // Fetch the updated patient list after creating a new patient\n            axios.get('/patients')\n                .then((response) => {\n                    setPatients(response.data);\n                    console.log(response.data)\n                })\n                .catch((error) => {\n                    console.error('Error fetching patients:', error);\n                });\n\n            setFormData({\n                first_name: '',\n                last_name: '',\n                birth_number: '',\n                drug_name: '',\n                dosage: '',\n                lot_number: '',\n                expiration_date: '',\n                count: '',\n            });\n        } catch (error) {\n            console.error('Error creating patient:', error);\n        }\n        navigate(\"/home\");\n    }\n\n\n\n\n\n\n\n    return (\n        <>\n            <div className=\"background\">\n                <Navbar />\n\n                <div className='container'>\n                    <form onSubmit={handleSubmit}>\n                        <label>\n                            Meno:\n                            <input\n                                type=\"text\"\n                                name=\"first_name\"\n                                value={formData.first_name}\n                                onChange={handleChange}\n\n                            />\n                        </label>\n                        <label>\n                            Priezvisko:\n                            <input\n                                type=\"text\"\n                                name=\"last_name\"\n                                value={formData.last_name}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Rodné číslo:\n                            <input\n                                type=\"text\"\n                                name=\"birth_number\"\n                                value={formData.birth_number}\n                                onChange={handleChange}\n                            />\n                        </label>\n\n                        <label>\n                            Liek:\n                            <input\n                                type=\"text\"\n                                name=\"drug_name\"\n                                value={formData.drug_name}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Dávka:\n                            <input\n                                type=\"text\"\n                                name=\"dosage\"\n                                value={formData.dosage}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Šarža:\n                            <input\n                                type=\"text\"\n                                name=\"lot_number\"\n                                value={formData.lot_number}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Exspirácia:\n                            <input\n                                type=\"text\"\n                                name=\"expiration_date\"\n                                value={formData.expiration_date}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Počet ks:\n                            <input\n                                type=\"text\"\n                                name=\"count\"\n                                value={formData.count}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <button type=\"submit\">Pridaj pacienta</button>\n\n                    </form>\n\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default PatientForm;\n","// EditPatient.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport \"./EditForm.css\"\n\n\nfunction EditForm({ fetchAllPatients, patients, setPatients, patientId, onClose }) {\n\n    const navigate = useNavigate()\n    const [formData, setFormData] = useState({\n        first_name: patients.first_name,\n        last_name: patients.last_name,\n        birth_number: patients.birth_number,\n        drug_name: patients.drug_name,\n        dosage: patients.dosage,\n        lot_number: patients.lot_number,\n        expiration_date: patients.expiration_date,\n        count: patients.count\n    });\n\n    useEffect(() => {\n        // Fetch the patient's data when the component mounts\n        axios\n            .get(`/patients`)\n            .then((response) => {\n                const patientData = response.data;\n                setFormData(patientData);\n            })\n            .catch((error) => {\n                console.error('Error fetching patient data:', error);\n            });\n    }, [patientId]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleCancel = () => {\n        // Close the edit form without making any changes\n        onClose();\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            // Send a PUT request to update the patient's data\n            await axios.put(`/patients/${patientId}`, formData);\n\n            // Refresh the patient data in the Home component\n            axios.get('/patients')\n                .then((response) => {\n                    setPatients(response.data);\n                })\n                .catch((error) => {\n                    console.error('Error fetching patients:', error);\n                });\n\n            onClose();\n        } catch (error) {\n            console.error('Error updating patient:', error);\n\n        }\n        navigate(\"/home\")\n        fetchAllPatients()\n\n    };\n\n    return (\n        <div className='form-container'>\n            <h2>Zmeň údaje:</h2>\n            <form onSubmit={handleSubmit}>\n\n                <label>\n                    Meno:\n                    <input\n                        type=\"text\"\n                        name=\"first_name\"\n                        value={formData.first_name || ''}\n                        onChange={handleChange}\n\n                    />\n                </label>\n                <label>\n                    Priezvisko:\n                    <input\n                        type=\"text\"\n                        name=\"last_name\"\n                        value={formData.last_name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Rodné číslo:\n                    <input\n                        type=\"text\"\n                        name=\"birth_number\"\n                        value={formData.birth_number}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <label>\n                    Liek:\n                    <input\n                        type=\"text\"\n                        name=\"drug_name\"\n                        value={formData.drug_name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Dávka:\n                    <input\n                        type=\"text\"\n                        name=\"dosage\"\n                        value={formData.dosage}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Šarža:\n                    <input\n                        type=\"text\"\n                        name=\"lot_number\"\n                        value={formData.lot_number}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Exspirácia:\n                    <input\n                        type=\"text\"\n                        name=\"expiration_date\"\n                        value={formData.expiration_date}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Počet ks:\n                    <input\n                        type=\"text\"\n                        name=\"count\"\n                        value={formData.count}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <button type=\"submit\">Uložiť</button>\n                <button type=\"button\" onClick={handleCancel}>Späť</button>\n            </form>\n        </div>\n    );\n}\n\nexport default EditForm;\n","import React, { useState } from \"react\";\nimport \"./PatientList.css\";\nimport { FaRegRectangleXmark } from \"react-icons/fa6\";\nimport {\n  AiOutlineEdit,\n  AiFillCheckSquare,\n  AiOutlineCheckSquare,\n} from \"react-icons/ai\";\nimport EditForm from \"./EditForm\";\nimport { HashLink } from \"react-router-hash-link\";\nimport axios from \"axios\";\n\nfunction PatientList({\n  fetchAllPatients,\n  searchResultMessage,\n  patients,\n  setPatients,\n  handleDelete,\n}) {\n  const [editingPatientId, setEditingPatientId] = useState(null);\n\n  const handleEdit = (patientId) => {\n    console.log(\"Editing patient with ID:\", patientId);\n    setEditingPatientId(patientId);\n  };\n  const handleCloseEditForm = () => {\n    setEditingPatientId(null);\n  };\n\n  const handleCheckToggle = async (patientId) => {\n    // Find the patient by ID\n    const updatedPatients = patients.map((patient) => {\n      if (patient._id === patientId) {\n        // Toggle the checked status\n        patient.checked = !patient.checked;\n\n        // Update the checked status in the backend\n        axios\n          .put(`/patients/${patient._id}`, { checked: patient.checked })\n          .then((response) => {\n            // Handle the response if needed\n          })\n          .catch((error) => {\n            console.error(\"Error toggling patient checked status:\", error);\n          });\n      }\n      return patient;\n    });\n\n    // Update the state with the modified patient list\n    setPatients(updatedPatients);\n  };\n\n  return (\n    <>\n      <div className=\"patient-container\">\n        <h2>Zoznam pacientov</h2>\n\n        <div className=\"table-container\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Dátum a čas</th>\n                <th>Meno</th>\n                <th>Priezvisko</th>\n                <th>Rodné číslo</th>\n                <th>Liek</th>\n                <th>Dávka</th>\n                <th>Šarža</th>\n                <th>Exspirácia</th>\n                <th>Počet</th>\n                <th>Upraviť</th>\n                <th>Vymazať</th>\n                <th>Odpísať</th>\n              </tr>\n            </thead>\n            <tbody>\n              {patients.map((patient) => (\n                <tr\n                  key={patient._id}\n                  className={patient.checked ? \"highlighted\" : \"\"}\n                >\n                  {patient.date && (\n                    <td>\n                      {patient.date.split(\"T\")[0]} {patient.date.slice(11, 19)}\n                    </td>\n                  )}\n\n                  <td>{patient.first_name}</td>\n                  <td>{patient.last_name}</td>\n                  <td>{patient.birth_number}</td>\n                  <td>{patient.drug_name}</td>\n                  <td>{patient.dosage}</td>\n                  <td>{patient.lot_number}</td>\n                  <td>{patient.expiration_date}</td>\n                  <td>{patient.count}</td>\n\n                  <td>\n                    <HashLink smooth to=\"/home#cont\">\n                      <button onClick={() => handleEdit(patient._id)}>\n                        <AiOutlineEdit className=\"icon\" />\n                      </button>\n                    </HashLink>\n                  </td>\n                  <td>\n                    <button onClick={() => handleDelete(patient._id)}>\n                      <FaRegRectangleXmark className=\"icon\" />\n                    </button>\n                  </td>\n                  <td>\n                    <button onClick={() => handleCheckToggle(patient._id)}>\n                      {patient.checked ? (\n                        <AiFillCheckSquare className=\"icon\" />\n                      ) : (\n                        <AiOutlineCheckSquare className=\"icon\" />\n                      )}\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {searchResultMessage && <p className=\"error\">{searchResultMessage}</p>}\n\n      {editingPatientId && (\n        <div className=\"container\" id=\"cont\">\n          <EditForm\n            fetchAllPatients={fetchAllPatients}\n            setPatients={setPatients}\n            patients={patients}\n            patientId={editingPatientId}\n            onClose={handleCloseEditForm}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default PatientList;\n","\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport PatientList from './PatientList';\nimport Navbar from './Navbar';\n\nexport default function Home() {\n    const [patients, setPatients] = useState([]);\n    const [allPatients, setAllPatients] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResultMessage, setSearchResultMessage] = useState('');\n\n    const handleDelete = (patientId) => {\n        // Send a DELETE request to delete the patient by ID\n        axios.delete(`/patients/${patientId}`)\n            .then((response) => {\n                console.log(response.data);\n                // Remove the deleted patient from the local state\n                setPatients(patients.filter((patient) => patient._id !== patientId));\n            })\n            .catch((error) => {\n                console.error('Error deleting patient:', error);\n            });\n    };\n\n    useEffect(() => {\n        // Fetch all patient data from the server when the component mounts\n        axios.get('/patients')\n            .then((response) => {\n                const patientData = response.data;\n                setAllPatients(patientData);\n                setPatients(patientData);\n            })\n            .catch((error) => {\n                console.error('Error fetching patients:', error);\n            });\n    }, []);\n\n    const fetchAllPatients = () => {\n        // Fetch all patient data from the server when the component mounts\n        axios.get('/patients')\n            .then((response) => {\n                const patientData = response.data;\n                setAllPatients(patientData);\n                setPatients(patientData);\n            })\n            .catch((error) => {\n                console.error('Error fetching patients:', error);\n            });\n        setSearchResultMessage('')\n    }\n\n\n\n    const handleSearch = () => {\n        const queryLowerCase = searchQuery.toLowerCase();\n        const filteredPatients = allPatients.filter((patient) => {\n            const patientData = Object.values(patient);\n\n            return patientData.some((field) => {\n                if (field && typeof field === 'string') {\n                    return field.toLowerCase().includes(queryLowerCase);\n                }\n                return false;\n            });\n        });\n\n\n\n        if (filteredPatients.length === 0) {\n            setSearchResultMessage('Pacient s danými údajmi neexistuje.');\n        } else {\n            setSearchResultMessage('');\n        }\n\n        setPatients(filteredPatients);\n        setSearchQuery('');\n\n    };\n\n\n    return (\n        <>\n            <div className=\"background\">\n                {patients && <Navbar fetchAllPatients={fetchAllPatients} searchQuery={searchQuery} setSearchQuery={setSearchQuery} handleSearch={handleSearch} />}\n\n                {patients && <PatientList\n                    fetchAllPatients={fetchAllPatients}\n                    searchResultMessage={searchResultMessage}\n                    setSearchResultMessage={setSearchResultMessage} searchQuery={searchQuery} setSearchQuery={setSearchQuery} handleSearch={handleSearch} setPatients={setPatients} patients={patients} handleDelete={handleDelete} />}\n\n                {new Date().getFullYear()}\n            </div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useState } from 'react';\nimport \"./Login.css\"\n\nexport default function Login() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({\n        name: '',\n        password: ''\n    });\n\n    const [message, setMessage] = useState('');\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n\n        });\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        axios.post('/login', { ...values })\n            .then(result => {\n                console.log(result)\n                if (result.data === \"Úspešne ste sa prihlásili.\") {\n                    navigate(\"/home\")\n                } else {\n                    setMessage(result.data);\n                }\n            }).catch(error => console.log(error))\n\n\n    }\n\n\n\n\n    return (\n        <>\n            <div className=\"login-container\">\n                <h2>Testovacia stránka na ukážku. Použité údaje nie sú pravdivé.</h2>\n                <div className=\"login-form\">\n\n                    <form onSubmit={handleSubmit}>\n\n                        <label>\n                            Meno:\n                            <input type=\"text\" name=\"name\" value={values.name} onChange={handleChange} required />\n\n                        </label>\n                        <label>Heslo: <input type=\"password\" name=\"password\" value={values.password} onChange={handleChange} required /></label>\n                        <button>Prihlás sa</button>\n\n                    </form>\n\n                    {message && <div className=\"message\">{message}</div>}\n                    <div className=\"login-details\">\n                        <p>Prihlasovacie údaje:</p>\n                        <p>Meno: 'test'</p>\n                        <p>Heslo: #test123</p>\n                    </div>\n\n                </div>\n            </div>\n\n        </>\n    )\n}\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { createRoot } from \"react-dom/client\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport PatientForm from './components/PatientForm';\nimport Home from './components/Home';\nimport Login from './components/Login';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Login />\n  },\n  {\n    path: \"/add-patient\",\n    element: <PatientForm />\n  },\n  {\n    path: \"/home\",\n    element: <Home />\n  }\n]);\n\ncreateRoot(document.getElementById(\"root\")).render(\n  <RouterProvider router={router} />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}