{"version":3,"sources":["reportWebVitals.js","components/SearchBar.js","components/Navbar.js","components/PatientForm.js","components/EditForm.js","components/PatientList.js","components/Home.js","components/Login.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBar","searchQuery","setSearchQuery","handleSearch","React","createElement","Fragment","className","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","Navbar","fetchAllPatients","Link","to","PatientForm","formData","setFormData","useState","first_name","last_name","birth_number","drug_name","dosage","lot_number","expiration_date","count","patients","setPatients","console","log","navigate","useNavigate","useEffect","axios","get","response","data","catch","error","handleChange","name","onSubmit","async","preventDefault","post","Date","getFullYear","EditForm","patientId","onClose","patientData","put","concat","handleCancel","PatientList","searchResultMessage","handleDelete","editingPatientId","setEditingPatientId","map","patient","_id","checked","date","split","slice","HashLink","smooth","handleEdit","AiOutlineEdit","FaRegRectangleXmark","updatedPatients","handleCheckToggle","AiFillCheckSquare","AiOutlineCheckSquare","id","handleCloseEditForm","Home","allPatients","setAllPatients","setSearchResultMessage","queryLowerCase","toLowerCase","filteredPatients","filter","Object","values","some","field","includes","length","delete","Login","setValues","password","message","setMessage","result","required","router","createBrowserRouter","path","element","createRoot","document","getElementById","render","RouterProvider"],"mappings":"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","file":"static/js/main.1228df14.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// SearchBar.js\n\nimport React from 'react';\nimport \"./SearchBar.css\"\n\nfunction SearchBar({ searchQuery, setSearchQuery, handleSearch }) {\n\n    const handleSearchKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n\n    return (\n        <>\n            <div className=\"search-box\">\n                <div className=\"search\">\n                    <div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Vyhľadávaj...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                            onKeyDown={handleSearchKeyPress}\n                        />\n                    </div>\n                </div>\n                <li><button className='search-btn' onClick={handleSearch}>Hľadaj</button></li>\n            </div>\n\n        </>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport \"./Navbar.css\"\nimport SearchBar from './SearchBar'\n\nexport default function Navbar({ searchQuery, setSearchQuery, handleSearch, fetchAllPatients }) {\n    return (\n        <>\n            <nav>\n                <div className=\"nav-box\">\n                    <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} handleSearch={handleSearch} />\n                    <ul>\n                        <li><Link to=\"/home\" onClick={fetchAllPatients}>Domov</Link></li>\n                        <li><Link to=\"/add-patient\" >Pridaj pacienta</Link> </li>\n                        <li><Link to=\"/\" >Odhlás sa</Link> </li>\n                    </ul>\n                </div>\n            </nav>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport \"./PatientForm.css\"\n\n\nfunction PatientForm() {\n\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        birth_number: '',\n        drug_name: '',\n        dosage: '',\n        lot_number: '',\n        expiration_date: '',\n        count: '',\n    });\n\n    const [patients, setPatients] = useState([]);\n    console.log(patients)\n\n    const navigate = useNavigate();\n\n\n\n    useEffect(() => {\n        // Fetch patient data from the server when the component mounts\n        axios.get('/patients')\n            .then((response) => {\n                setPatients(response.data);\n                console.log(response.data)\n            })\n            .catch((error) => {\n                console.error('Error fetching patients:', error);\n            });\n    }, []);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            await axios.post('/patients', formData);\n\n            // Fetch the updated patient list after creating a new patient\n            axios.get('/patients')\n                .then((response) => {\n                    setPatients(response.data);\n                    console.log(response.data)\n                })\n                .catch((error) => {\n                    console.error('Error fetching patients:', error);\n                });\n\n            setFormData({\n                first_name: '',\n                last_name: '',\n                birth_number: '',\n                drug_name: '',\n                dosage: '',\n                lot_number: '',\n                expiration_date: '',\n                count: '',\n            });\n        } catch (error) {\n            console.error('Error creating patient:', error);\n        }\n        navigate(\"/home\");\n    }\n\n\n\n\n\n\n\n    return (\n        <>\n            <div className=\"background\">\n                <Navbar />\n\n                <div className='container'>\n                    <form onSubmit={handleSubmit}>\n                        <label>\n                            Meno:\n                            <input\n                                type=\"text\"\n                                name=\"first_name\"\n                                value={formData.first_name}\n                                onChange={handleChange}\n\n                            />\n                        </label>\n                        <label>\n                            Priezvisko:\n                            <input\n                                type=\"text\"\n                                name=\"last_name\"\n                                value={formData.last_name}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Rodné číslo:\n                            <input\n                                type=\"text\"\n                                name=\"birth_number\"\n                                value={formData.birth_number}\n                                onChange={handleChange}\n                            />\n                        </label>\n\n                        <label>\n                            Liek:\n                            <input\n                                type=\"text\"\n                                name=\"drug_name\"\n                                value={formData.drug_name}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Dávka:\n                            <input\n                                type=\"text\"\n                                name=\"dosage\"\n                                value={formData.dosage}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Šarža:\n                            <input\n                                type=\"text\"\n                                name=\"lot_number\"\n                                value={formData.lot_number}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Exspirácia:\n                            <input\n                                type=\"text\"\n                                name=\"expiration_date\"\n                                value={formData.expiration_date}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Počet ks:\n                            <input\n                                type=\"text\"\n                                name=\"count\"\n                                value={formData.count}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <button type=\"submit\">Pridaj pacienta</button>\n\n                    </form>\n\n                </div>\n\n                <div>\n                    {new Date().getFullYear()}\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default PatientForm;\n","// EditPatient.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport \"./EditForm.css\"\n\n\nfunction EditForm({ fetchAllPatients, patients, setPatients, patientId, onClose }) {\n\n    const navigate = useNavigate()\n    const [formData, setFormData] = useState({\n        first_name: patients.first_name,\n        last_name: patients.last_name,\n        birth_number: patients.birth_number,\n        drug_name: patients.drug_name,\n        dosage: patients.dosage,\n        lot_number: patients.lot_number,\n        expiration_date: patients.expiration_date,\n        count: patients.count\n    });\n\n    useEffect(() => {\n        // Fetch the patient's data when the component mounts\n        axios\n            .get(`/patients`)\n            .then((response) => {\n                const patientData = response.data;\n                setFormData(patientData);\n            })\n            .catch((error) => {\n                console.error('Error fetching patient data:', error);\n            });\n    }, [patientId]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleCancel = () => {\n        // Close the edit form without making any changes\n        onClose();\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            // Send a PUT request to update the patient's data\n            await axios.put(`/patients/${patientId}`, formData);\n\n            // Refresh the patient data in the Home component\n            axios.get('/patients')\n                .then((response) => {\n                    setPatients(response.data);\n                })\n                .catch((error) => {\n                    console.error('Error fetching patients:', error);\n                });\n\n            onClose();\n        } catch (error) {\n            console.error('Error updating patient:', error);\n\n        }\n        navigate(\"/home\")\n        fetchAllPatients()\n\n    };\n\n    return (\n        <div className='form-container'>\n            <h2>Zmeň údaje:</h2>\n            <form onSubmit={handleSubmit}>\n\n                <label>\n                    Meno:\n                    <input\n                        type=\"text\"\n                        name=\"first_name\"\n                        value={formData.first_name || ''}\n                        onChange={handleChange}\n\n                    />\n                </label>\n                <label>\n                    Priezvisko:\n                    <input\n                        type=\"text\"\n                        name=\"last_name\"\n                        value={formData.last_name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Rodné číslo:\n                    <input\n                        type=\"text\"\n                        name=\"birth_number\"\n                        value={formData.birth_number}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <label>\n                    Liek:\n                    <input\n                        type=\"text\"\n                        name=\"drug_name\"\n                        value={formData.drug_name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Dávka:\n                    <input\n                        type=\"text\"\n                        name=\"dosage\"\n                        value={formData.dosage}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Šarža:\n                    <input\n                        type=\"text\"\n                        name=\"lot_number\"\n                        value={formData.lot_number}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Exspirácia:\n                    <input\n                        type=\"text\"\n                        name=\"expiration_date\"\n                        value={formData.expiration_date}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label>\n                    Počet ks:\n                    <input\n                        type=\"text\"\n                        name=\"count\"\n                        value={formData.count}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <button type=\"submit\">Uložiť</button>\n                <button type=\"button\" onClick={handleCancel}>Späť</button>\n            </form>\n        </div>\n    );\n}\n\nexport default EditForm;\n","import React, { useState } from 'react';\nimport \"./PatientList.css\"\nimport { FaRegRectangleXmark } from \"react-icons/fa6\";\nimport { AiOutlineEdit, AiFillCheckSquare, AiOutlineCheckSquare } from \"react-icons/ai\";\nimport EditForm from './EditForm';\nimport { HashLink } from 'react-router-hash-link';\nimport axios from \"axios\"\n\nfunction PatientList({ fetchAllPatients, searchResultMessage, patients, setPatients, handleDelete }) {\n\n\n    const [editingPatientId, setEditingPatientId] = useState(null);\n\n    const handleEdit = (patientId) => {\n        console.log('Editing patient with ID:', patientId);\n        setEditingPatientId(patientId);\n    };\n    const handleCloseEditForm = () => {\n        setEditingPatientId(null);\n    };\n\n\n\n    const handleCheckToggle = async (patientId) => {\n        // Find the patient by ID\n        const updatedPatients = patients.map((patient) => {\n            if (patient._id === patientId) {\n                // Toggle the checked status\n                patient.checked = !patient.checked;\n\n\n                // Update the checked status in the backend\n                axios.put(`/patients/${patient._id}`, { checked: patient.checked })\n                    .then((response) => {\n                        // Handle the response if needed\n                    })\n                    .catch((error) => {\n                        console.error('Error toggling patient checked status:', error);\n                    });\n            }\n            return patient;\n        });\n\n        // Update the state with the modified patient list\n        setPatients(updatedPatients);\n    };\n\n\n\n\n\n    return (\n        <>\n            <div className=\"patient-container\">\n                <h2>Zoznam pacientov</h2>\n                <div className='card'>\n                    <div className='list-items'>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Dátum a čas</th>\n                                    <th>Meno</th>\n                                    <th>Priezvisko</th>\n                                    <th>Rodné číslo</th>\n                                    <th>Liek</th>\n                                    <th>Dávka</th>\n                                    <th>Šarža</th>\n                                    <th>Exspirácia</th>\n                                    <th>Počet</th>\n                                    <th>Upraviť</th>\n                                    <th>Vymazať</th>\n                                    <th>Odpísať</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {patients.map((patient) => (\n                                    <tr key={patient._id} className={patient.checked ? 'highlighted' : ''}>\n                                        {patient.date && (\n                                            <td>{patient.date.split(\"T\")[0]} {patient.date.slice(11, 19)}</td>\n                                        )}\n\n                                        <td>{patient.first_name}</td>\n                                        <td>{patient.last_name}</td>\n                                        <td>{patient.birth_number}</td>\n                                        <td>{patient.drug_name}</td>\n                                        <td>{patient.dosage}</td>\n                                        <td>{patient.lot_number}</td>\n                                        <td>{patient.expiration_date}</td>\n                                        <td>{patient.count}</td>\n\n\n                                        <td><HashLink smooth to=\"/home#cont\"><button onClick={() => handleEdit(patient._id)}><AiOutlineEdit className=\"icon\" /></button></HashLink></td>\n                                        <td><button onClick={() => handleDelete(patient._id)}><FaRegRectangleXmark className='icon' /></button></td>\n                                        <td>\n                                            <button onClick={() => handleCheckToggle(patient._id)}>\n                                                {patient.checked ? <AiFillCheckSquare className='icon' /> : <AiOutlineCheckSquare className='icon' />}\n                                            </button>\n                                        </td>\n                                    </tr>\n\n                                ))}\n                            </tbody>\n\n\n\n\n\n\n                        </table>\n\n\n                    </div>\n                    {searchResultMessage && <p className='error'>{searchResultMessage}</p>}\n\n                    {editingPatientId && (\n                        <div className=\"container\" id='cont'>\n                            <EditForm fetchAllPatients={fetchAllPatients} setPatients={setPatients} patients={patients} patientId={editingPatientId} onClose={handleCloseEditForm} />\n                        </div>\n                    )}\n\n\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default PatientList;\n","\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport PatientList from './PatientList';\nimport Navbar from './Navbar';\n\nexport default function Home() {\n    const [patients, setPatients] = useState([]);\n    const [allPatients, setAllPatients] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResultMessage, setSearchResultMessage] = useState('');\n\n    const handleDelete = (patientId) => {\n        // Send a DELETE request to delete the patient by ID\n        axios.delete(`/patients/${patientId}`)\n            .then((response) => {\n                console.log(response.data);\n                // Remove the deleted patient from the local state\n                setPatients(patients.filter((patient) => patient._id !== patientId));\n            })\n            .catch((error) => {\n                console.error('Error deleting patient:', error);\n            });\n    };\n\n    useEffect(() => {\n        // Fetch all patient data from the server when the component mounts\n        axios.get('/patients')\n            .then((response) => {\n                const patientData = response.data;\n                setAllPatients(patientData);\n                setPatients(patientData);\n            })\n            .catch((error) => {\n                console.error('Error fetching patients:', error);\n            });\n    }, []);\n\n    const fetchAllPatients = () => {\n        // Fetch all patient data from the server when the component mounts\n        axios.get('/patients')\n            .then((response) => {\n                const patientData = response.data;\n                setAllPatients(patientData);\n                setPatients(patientData);\n            })\n            .catch((error) => {\n                console.error('Error fetching patients:', error);\n            });\n        setSearchResultMessage('')\n    }\n\n\n\n    const handleSearch = () => {\n        const queryLowerCase = searchQuery.toLowerCase();\n        const filteredPatients = allPatients.filter((patient) => {\n            const patientData = Object.values(patient);\n\n            return patientData.some((field) => {\n                if (field && typeof field === 'string') {\n                    return field.toLowerCase().includes(queryLowerCase);\n                }\n                return false;\n            });\n        });\n\n\n\n        if (filteredPatients.length === 0) {\n            setSearchResultMessage('Pacient s danými údajmi neexistuje.');\n        } else {\n            setSearchResultMessage('');\n        }\n\n        setPatients(filteredPatients);\n        setSearchQuery('');\n\n    };\n\n\n    return (\n        <>\n            <div className=\"background\">\n                {patients && <Navbar fetchAllPatients={fetchAllPatients} searchQuery={searchQuery} setSearchQuery={setSearchQuery} handleSearch={handleSearch} />}\n\n                {patients && <PatientList\n                    fetchAllPatients={fetchAllPatients}\n                    searchResultMessage={searchResultMessage}\n                    setSearchResultMessage={setSearchResultMessage} searchQuery={searchQuery} setSearchQuery={setSearchQuery} handleSearch={handleSearch} setPatients={setPatients} patients={patients} handleDelete={handleDelete} />}\n\n                {new Date().getFullYear()}\n            </div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useState } from 'react';\nimport \"./Login.css\"\n\nexport default function Login() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({\n        name: '',\n        password: ''\n    });\n\n    const [message, setMessage] = useState('');\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n\n        });\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        axios.post('/login', { ...values })\n            .then(result => {\n                console.log(result)\n                if (result.data === \"Úspešne ste sa prihlásili.\") {\n                    navigate(\"/home\")\n                } else {\n                    setMessage(result.data);\n                }\n            }).catch(error => console.log(error))\n\n\n    }\n\n\n\n\n    return (\n        <>\n            <div className=\"login-container\">\n                <h2>Testovacia stránka na ukážku. Použité údaje nie sú pravdivé.</h2>\n                <div className=\"login-form\">\n\n                    <form onSubmit={handleSubmit}>\n\n                        <label>\n                            Meno:\n                            <input type=\"text\" name=\"name\" value={values.name} onChange={handleChange} required />\n\n                        </label>\n                        <label>Heslo: <input type=\"password\" name=\"password\" value={values.password} onChange={handleChange} required /></label>\n                        <button>Prihlás sa</button>\n\n                    </form>\n\n                    {message && <div className=\"message\">{message}</div>}\n                    <div className=\"login-details\">\n                        <p>Prihlasovacie údaje:</p>\n                        <p>Meno: 'test'</p>\n                        <p>Heslo: #test123</p>\n                    </div>\n\n                </div>\n            </div>\n\n        </>\n    )\n}\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { createRoot } from \"react-dom/client\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport PatientForm from './components/PatientForm';\nimport Home from './components/Home';\nimport Login from './components/Login';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Login />\n  },\n  {\n    path: \"/add-patient\",\n    element: <PatientForm />\n  },\n  {\n    path: \"/home\",\n    element: <Home />\n  }\n]);\n\ncreateRoot(document.getElementById(\"root\")).render(\n  <RouterProvider router={router} />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}